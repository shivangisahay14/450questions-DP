	Recursion+Memoization:
  int getMinSteps(int n, int *memo)
{
    // base case
    if (n == 1)
       return 0;
    if (memo[n] != -1)
       return memo[n];
 
    // store temp value for n as min( f(n-1),
    // f(n/2), f(n/3)) +1
    int res = getMinSteps(n-1, memo);
 
    if (n%2 == 0)
        res = min(res, getMinSteps(n/2, memo));
    if (n%3 == 0)
        res = min(res, getMinSteps(n/3, memo));
 
    // store memo[n] and return
    memo[n] = 1 + res;
    return memo[n];
}
  
  Tabulation:
  int minSteps(int N) 
	{ 
	    if(N==1)
	        return 0;
	    int dp[N+1];
	    dp[0]=0;
	    dp[1]=0;
	    
	    
	    for(int i=2;i<=N;i++){
	        
	        
	         dp[i]=dp[i-1]+1;
	        
	        if(i%3==0){
	             dp[i]=min(dp[i],1+dp[i/3]);
	        }
	        if(i%2==0){
	             dp[i]=min(dp[i],1+dp[i/2]);
	        }
	        
	    }
	    
	    return dp[N];
	    // Your code goes here
	} 
