 Inspired by count subsets with given difference between two subsets.(0/1 knapsack)
 
 
int findTargetSumWays(vector<int>& nums, int target) {
        
        int n=nums.size();
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=nums[i];
        }
        
        int s1=(target+sum)/2;
        if( (target+ sum) % 2 != 0 || sum < target) return 0; 
        
        int dp[n+1][s1+1];
        
        for(int i=0;i<n;i++){
            for(int j=0;j<s1;j++){
                
                if(i==0)
                 dp[i][j]=0;
                else if(j==0)
                {  dp[i][j]=1;}
                
                else if(nums[i-1]<=j){
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-nums[i]];
                }
                else
                 dp[i][j]=dp[i-1][j];                
            }
        }
        
        return dp[n][s1];
    }
