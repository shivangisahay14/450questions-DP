int LongestBitonicSequence(vector<int>nums)
	{
	    int n=nums.size();
	    int left[n+1],right[n+1];
	    left[0]=1;
	    for(int i=1;i<n;i++){
	        int x=1;
	        for(int j=0;j<i;j++){
	            if(nums[i]>nums[j]){
	                x=max(x,left[j]+1);
	            }
	        }
	        left[i]=x;
	    }
	    
	    right[n-1]=1;
	    for(int i=n-2;i>=0;i--){
	        int x=1;
	        for(int j=i+1;j<n;j++){
	            if(nums[i]>nums[j]){
	                x=max(x,right[j]+1);
	            }
	        }
	        right[i]=x;
	    }
	    int ans=0;
	    for(int i=0;i<n;i++){
	        ans=max(ans,left[i]+right[i]-1);
	    }
	    
	    return ans;
	    // code here
	}
